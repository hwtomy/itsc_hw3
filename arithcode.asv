function enc = arithcode(inx, a)
N = 22;
P = 8;
C = 0;
A = 2^N;
r = -1;
b = 0;
enc = [];

pc= floor(a * 2^P);
ps = floor((1-a) * 2^P);
pre = inx(1);
for xn = inx
    if xn ~= pre
        T = A * pc;
        C = C + 0;
    else
        T = A * ps;
        C = C + T;
    end
    if C >= 2^(N+P)
        C = mod(C, 2^(N+P));
        enc = [enc 1];
        if r > 0
            enc = [enc zeros(1,r-1)];
            r = 0;
        else
            r = -1;
        end
    end

    while T < 2^(N+P-1)
        b = b + 1;
        T = 2 * T;
        C = 2 * C;
        if C >= 2^(N+P)
            C = mod(C, 2^(N+P));
            if r < 0
                enc = [enc 1];
            else
                r = r + 1;
            end
        else
            if r >= 0
                enc = [enc 0 ones(1,r)];
            end
        r = 0;
        end
    end
    A = floor(T / 2^P);
    pre = xn;
    end
    if r >= 0
    enc = [enc 0 ones(1,r)];
end
C_bin = dec2binvec(C);
if length(C_bin) > (N + P)
C_bin = C_bin(end-(N+P)+1:end); 
end
enc = [enc C_bin]; 
end
            
             



